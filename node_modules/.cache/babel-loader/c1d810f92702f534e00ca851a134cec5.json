{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\react-dashboard\\\\src\\\\components\\\\Login\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function RegisterUser(userdetails) {\n  console.log(userdetails);\n  return fetch('https://dash-auth.herokuapp.com/user/register', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userdetails)\n  }).then(async data => data.json());\n}\n\n_c = RegisterUser;\n\nfunction Register(props) {\n  _s();\n\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLastName] = useState();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [cnfpwd, setCnfpwd] = useState();\n  const [regmessage, setRegmessage] = useState('');\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (password !== cnfpwd) {\n      setRegmessage(\"Passwords are not matching :(\");\n    } else {\n      const Resp = await RegisterUser({\n        firstName,\n        lastName,\n        username,\n        password\n      });\n      console.log(Resp);\n    }\n  }\n\n  function handleback(e) {\n    window.location.href = '/login';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Firstname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => setFirstName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lastname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => setLastName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"Externallink\",\n        href: \"https://mugilvannan-4.github.io/React-passwd/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Need Help?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          onChange: e => setCnfpwd(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"err\",\n        children: regmessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submitbutton\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"backbutton\",\n          type: \"button\",\n          onClick: () => handleback(),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 17\n  }, this);\n}\n\n_s(Register, \"0au64qum9DZl7EWNXhjj5Yin1lo=\");\n\n_c2 = Register;\nexport default Register;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RegisterUser\");\n$RefreshReg$(_c2, \"Register\");","map":{"version":3,"sources":["D:/ReactJS/react-dashboard/src/components/Login/Register.js"],"names":["React","useState","useHistory","RegisterUser","userdetails","console","log","fetch","method","headers","body","JSON","stringify","then","data","json","Register","props","firstName","setFirstName","lastName","setLastName","username","setUsername","password","setPassword","cnfpwd","setCnfpwd","regmessage","setRegmessage","handleSubmit","e","preventDefault","Resp","handleback","window","location","href","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nasync function RegisterUser(userdetails) {\r\n    console.log(userdetails);\r\n    return fetch('https://dash-auth.herokuapp.com/user/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(userdetails)\r\n      \r\n      })\r\n        .then(async (data) => data.json())\r\n}\r\n\r\nfunction Register(props) {\r\n    const [firstName, setFirstName] = useState();\r\n    const [lastName, setLastName] = useState();\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [cnfpwd, setCnfpwd] = useState();\r\n    const [regmessage, setRegmessage] = useState('');\r\n \r\n    \r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        if(password !== cnfpwd ){\r\n            setRegmessage(\"Passwords are not matching :(\")\r\n        }\r\n        else {\r\n            const Resp = await RegisterUser({\r\n                firstName,\r\n                lastName,\r\n                username,\r\n                password\r\n            }); \r\n           console.log(Resp); \r\n        }\r\n        }\r\n\r\n    function handleback(e) {\r\n        window.location.href = '/login'\r\n    }\r\n    return(\r\n                <div className=\"signup-wrapper\">\r\n                    <h1>User details</h1>   \r\n                           <form onSubmit={(e) => handleSubmit(e)}>\r\n                             <label>\r\n                               <p>Firstname</p>\r\n                                  <input type=\"text\" required onChange={(e) => setFirstName(e.target.value)}/>\r\n                              </label>\r\n                              <label>\r\n                               <p>Lastname</p>\r\n                                  <input type=\"text\" required onChange={(e) => setLastName(e.target.value)}/>\r\n                              </label>\r\n                              <label>\r\n                               <p>Username</p>\r\n                                  <input type=\"text\" required onChange={(e) => setUsername(e.target.value)}/>\r\n                              </label>\r\n                              <label>\r\n                                <p>Password</p>\r\n                                  <input type=\"password\" required onChange={(e) => setPassword(e.target.value)}/>\r\n                              </label>\r\n                              <a className=\"Externallink\" href=\"https://mugilvannan-4.github.io/React-passwd/\" target=\"_blank\" rel=\"noopener noreferrer\" >Need Help?</a>\r\n                              <label>\r\n                                <p>Confirm Password</p>\r\n                                  <input type=\"password\" required onChange={(e) => setCnfpwd(e.target.value)}/>\r\n                              </label>\r\n                              <p className=\"err\">{regmessage}</p>\r\n                              <div>\r\n                                  <button className=\"submitbutton\" type=\"submit\">Register</button>\r\n                              </div>\r\n                              <div>\r\n                                  <button className=\"backbutton\" type=\"button\" onClick={() => handleback()}>Back</button>\r\n                              </div>\r\n                           </form>\r\n                </div>       \r\n    )\r\n\r\n    } \r\n\r\n\r\n\r\n\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\react-dashboard\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.css';\nimport Register from './Register';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  return fetch('https://dash-auth.herokuapp.com/user/authenticate', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(async data => data.json());\n}\n\nfunction Login(props) {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [regfirstname, setRegfirstname] = useState();\n  const [reglastname, setRegLastname] = useState();\n  const [reguser, setReguser] = useState();\n  const [regpsswd, setRegpsswd] = useState();\n  const [regcnfpwd, setRegcnfpwd] = useState();\n  const [message, setMessage] = useState('');\n  const [regmessage, setRegmessage] = useState('');\n  const [signupstate, setSignupstate] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n\n    if (token.token) {\n      props.setToken(token);\n      window.location.href = '/dashboard';\n    } else {\n      setMessage(token.message);\n    }\n  }\n\n  function handleregister(e) {\n    console.log(e);\n    e.preventDefault();\n\n    if (regpsswd !== regcnfpwd) {\n      setMessage(\"Passwords are not matching :(\");\n    } else {\n      console.log(\"calling API\");\n    }\n  }\n\n  function handlesignup() {\n    var sgnp = signupstate;\n    sgnp = !sgnp;\n    setSignupstate(sgnp);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-test\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bon voyage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-entry\",\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttons\",\n            type: \"Submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttons\",\n            type: \"button\",\n            onClick: () => handlesignup(),\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), signupstate === true && /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"dJtvpuwkZbB7MfMeBDMzRjape5w=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/ReactJS/react-dashboard/src/components/Login/Login.js"],"names":["React","useState","Register","useHistory","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","Login","props","username","setUserName","password","setPassword","regfirstname","setRegfirstname","reglastname","setRegLastname","reguser","setReguser","regpsswd","setRegpsswd","regcnfpwd","setRegcnfpwd","message","setMessage","regmessage","setRegmessage","signupstate","setSignupstate","handleSubmit","e","preventDefault","token","setToken","window","location","href","handleregister","console","log","handlesignup","sgnp","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport Register from './Register';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nasync function loginUser(credentials) {\r\n\r\n    return fetch('https://dash-auth.herokuapp.com/user/authenticate', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(credentials)\r\n      })\r\n        .then(async (data) => data.json())\r\n}\r\n\r\nfunction Login(props) {\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [regfirstname, setRegfirstname] = useState();\r\n    const [reglastname, setRegLastname] = useState();\r\n    const [reguser, setReguser] = useState();\r\n    const [regpsswd, setRegpsswd] = useState();\r\n    const [regcnfpwd, setRegcnfpwd] = useState();\r\n    const [message, setMessage] = useState('');\r\n    const [regmessage, setRegmessage] = useState('');\r\n    const [signupstate, setSignupstate] = useState(false);\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        const token = await loginUser({\r\n            username,\r\n            password\r\n        }); \r\n        if(token.token){\r\n        props.setToken(token);\r\n        window.location.href = '/dashboard'\r\n        } else {\r\n         setMessage(token.message);   \r\n        }\r\n\r\n    }\r\n\r\n    function handleregister(e) {\r\n        console.log(e);\r\n        e.preventDefault();\r\n        if(regpsswd !== regcnfpwd ){\r\n            setMessage(\"Passwords are not matching :(\")\r\n        }\r\n        else {\r\n            console.log(\"calling API\");\r\n        }\r\n    }\r\n\r\n    function handlesignup() {\r\n        var sgnp = signupstate;\r\n        sgnp = !sgnp;\r\n        setSignupstate(sgnp);\r\n    }\r\n    return(\r\n    <div className=\"login-test\">\r\n        <div className=\"login-wrapper\">\r\n            <h1>Bon voyage</h1>\r\n            <form className=\"login-entry\" onSubmit={(e) => handleSubmit(e)}>\r\n                <label>\r\n                    <p>Username</p>\r\n                    <input type=\"text\"  onChange={(e) => setUserName(e.target.value)}/>\r\n                </label>\r\n                <label>\r\n                    <p>Password</p>\r\n                    <input type=\"password\" onChange={(e) => setPassword(e.target.value)}/>\r\n                </label>\r\n                <h1>{message}</h1>\r\n                <div>\r\n                    <button className=\"buttons\" type=\"Submit\">Sign In</button>\r\n                </div>\r\n                <div>\r\n                    <button className=\"buttons\" type=\"button\" onClick={() => handlesignup()}>Sign Up</button>\r\n                </div>\r\n            </form>\r\n            {signupstate === true &&\r\n                <Register />\r\n                }\r\n        </div>\r\n     </div>\r\n    \r\n    )\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}